##########################################################################################
##########################################################################################

#This is my SuperSlicer Printer Settings/Custom G-code/Start G-code Section
#Acceleration control is done via VintageGriffin's accelerations.py script :
#https://discord.com/channels/460117602945990666/461133450636951552/901532665746968617

#Copy the next block and paste it in your Start G-code section and uncomment each lines by removing the '#' (in the Slicer)
##########################################################################################

#M104 S0
#M140 S0
#PRINT_START EXTRUDER_TEMP=[first_layer_temperature] BED_TEMP=[first_layer_bed_temperature] DWELL=600000
# 
#; ACCEL: 2000/2000/8     for First Layer
#; ACCEL: 7000/7000/8   for Travel
#; ACCEL: 1000/1000/8     for TYPE:External perimeter
#; ACCEL: 2000/2000/8     for TYPE:Overhang perimeter
#; ACCEL: 2000/2000/8     for TYPE:Internal perimeter
#; ACCEL: 2000/2000/8     for TYPE:Top solid infill
#; ACCEL: 4000/4000/8     for TYPE:Solid infill
#; ACCEL: 7000/7000/8     for TYPE:Internal infill
#; ACCEL: 5000/5000/8     for TYPE:Bridge infill
#; ACCEL: 5000/5000/8     for TYPE:Internal bridge infill
#; ACCEL: 2000/2000/8     for TYPE:Thin wall
#; ACCEL: 2000/2000/8     for TYPE:Gap fill
#; ACCEL: 7000/7000/8     for TYPE:Skirt
#; ACCEL: 7000/7000/8     for TYPE:Support material
#; ACCEL: 7000/7000/8     for TYPE:Support material interface

##########################################################################################

#This is my SuperSlicer Filament Settings/Custom G-code/Start G-code section (which changes based on filament used)

#Copy the next block and paste it in your Start G-code section and uncomment each lines by removing the '#' (in the Slicer)
##########################################################################################

#SET_GCODE_OFFSET Z=0.00
#SET_PRESSURE_ADVANCE ADVANCE=0.055

##########################################################################################
##########################################################################################

# [gcode_macro PRINT_START]
# #   Use PRINT_START for the slicer starting script - PLEASE CUSTOMISE THE SCRIPT
# gcode:
#     M117 Homing...                 ; display message
#     G28
#     Z_TILT_ADJUST
#     G28
#     BED_MESH_CALIBRATE 

#     ##  Uncomment for for your size printer:
#     #--------------------------------------------------------------------
#     ##  Uncomment for 250mm build
#     #G0 X125 Y125 Z30 F3600

#     #  Uncomment for 300 build
#     G0 X150 Y150 Z30 F3600

#     ##  Uncomment for 350mm build
#     #G0 X175 Y175 Z30 F3600
#     #--------------------------------------------------------------------

[gcode_macro PRINT_START]
gcode:
    
    {% set hotendTemp = params.HOTEND|int %}        # Extruder temperature
    {% set bedTemp = params.BED|int %}                  # Heated bed temperature
    {% set chamberTemp = params.CHAMBER|int %}          # Chamber temperature
    {% set DWELL = params.DWELL|default(0)|int %}       # Heatsoaking duration

    # Home printer
    STATUS_HOMING
    M117 Homing...
    G28

    # Heat up bed and wait
    STATUS_HEATING
    M117  Waiting for temperatures...
    M190 S{bedTemp} # set & wait for bed temp
    M117 Waiting for thermal expansion...
    G0 X150 Y150 Z30 F3600
    {% if chamberTemp %}
      TEMPERATURE_WAIT SENSOR="temperature_sensor chamber_temp" MINIMUM={chamberTemp}   # wait for chamber temp
    {% else %}
      HEATSOAK DWELL={DWELL} # Dwelling
    {% endif %}

    M109 S150

    M117 Leveling & calibrating z...
    Z_TILT_ADJUST
    G28
    
    M117 Creating a mesh...
    BED_MESH_CALIBRATE

    # Wait for hotend temperature
    G0 X150 Y150 Z10 F3600
    M109 S{hotendTemp}

    G90

    # LINE_PURGE

    M117 Printing...
    STATUS_PRINTING

[gcode_macro HEATSOAK]
gcode:
    G4 P{params.DWELL}

[gcode_macro PURGE]
gcode:
    SAVE_GCODE_STATE NAME=BEFORE_PURGE
    M117 Purging
    G0 X10 Y0 F5000
    G91
    G1 E9 F1000
    G90
    RESTORE_GCODE_STATE NAME=BEFORE_PURGE

# [gcode_macro PRIME_LINE]
# gcode:
#      SAVE_GCODE_STATE NAME=BEFORE_PRIME
#      M117 Prime Line
#      G0 X10.0 Y3.0 F5000.0  ; Go to X3 Y3
#      G1 Z0.2 F200            ; Set nozzle height
#      M109 S{params.EXTRUDER_TEMP|float*0.98} # Wait until 98% of extruder temp is reached, then continue  
#      M104 S{params.EXTRUDER_TEMP} # Set printing extruder temp
#      PURGE
#      G92 E0.0                ; reset extrusion distance
#      G1 X60.0 E9.0 F1000.0   ; intro line
#      G1 X100.0 E10 F1000.0   ; intro line
#      G92 E0.0                ; reset extrusion distance
#      G1 Z1 F5000             ; Lift Z
#      RESTORE_GCODE_STATE NAME=BEFORE_PRIME

[gcode_macro PRIME_LINE]
# description: Print an easy to remove parametric extruder priming line with a built-in handle.
gcode:
    # settings
    {% set line = {
      'x_padding'      : params.XPAD|default(0)|float,  # left/right padding around the bed the line can't print into
      'y_padding'      : params.YPAD|default(0)|float,  # top/bottom padding around the bed the line can't print into
      'initial_purge'  : params.PURGE|default(8)|int,   # mm of filament to purge before printing. set to 0 to disable
      'retract_after'  : params.RETRACT|default(1)|int, # mm of filament to recract after printing. set to 0 to disable
      'length'         : params.LENGTH|default(150)|int,
      'print_speed'    : params.PRINT_SPEED|default(30)|int,
      'travel_speed'   : params.TRAVEL_SPEED|default(200)|int,
      'extr_multi'     : params.EXTRUSION_MULTIPLIER|default(1.25)|float,  # apply to prime lines
      'overlap_percent': 80, # how much prime lines overlap each other
    } %}
    {% set handle = {
      'do_print'    : params.PRINT_HANDLE|default(1)|int,  # set to 0 to disable printing the handle
      'fan_percent' : params.HANDLE_FAN|default(40)|int,   # without fan the handle is too small and melty to print upright
      'width'       : 5.0,
      'height'      : 5.0,
      'move_away'   : 60   # how much to move the toolhead away from the printed handle once done. set 0 to disable
    } %}

    # sanity check and computed variables
    {% set max_x, max_y, nozzle_diameter = printer.toolhead.axis_maximum.x|float, printer.toolhead.axis_maximum.y|float, printer.configfile.config['extruder'].nozzle_diameter|float %}
    {% set _ = line.update({'width': nozzle_diameter * 1.25, 'height': nozzle_diameter / 2, 'length': [line.length, max_x - 2 * line.x_padding - 2]|min}) %}
    {% set _ = line.update({'e_per_mm': line.extr_multi * (line.width * line.height) / (3.1415 * (1.75/2)**2), 'x_start': max_x / 2 - line.length / 2, 'y_start': line.y_padding + range(0,5)|random})  %}

    SAVE_GCODE_STATE NAME=STATE_PRIME_LINE

    M117 Prime Line
    STATUS_CLEANING
    G90 # absolute positioning
    G0 X55 Y3 Z{line.height} F{line.travel_speed * 60} # move to starting position
    M109 S{params.EXTRUDER_TEMP|float*0.98} # Wait until 98% of extruder temp is reached, then continue  
    M104 S{params.EXTRUDER_TEMP} # Set printing extruder temp
    G91 # relative positioning
    G1 E{line.initial_purge} F{5 * 60} # extrude at ~12mm3/sec
    G0 F{line.print_speed * 60} # set print speed
    G1 X{line.length} E{line.length * line.e_per_mm} # print forward line
    G0 Y{line.width * line.overlap_percent / 100} # overlap forward line
    G1 X-{line.length / 2} E{(line.length / 2) * line.e_per_mm}  # print backward line for half the length

    # print a handle for easy removal
    {% if handle.do_print != 0 and handle.width != 0 and handle.height != 0 %}
      G0 X{line.length / 2 - handle.width} Y{handle.width / 2} F{line.travel_speed * 60} # move into position for printing handle
      G0 F{line.print_speed * 60} # set print speed
      {% set saved_fan_speed = (printer['fan'].speed * 256)|int %}
      M106 S{((handle.fan_percent / 100) * 256)|int} # set part fan to desired speed
      {% for _ in range((line.height * 1000)|int, (handle.height * 1000)|int, (line.height * 1000)|int) %} # loop however many cycles it takes to print required handle height
        G1 Y{loop.cycle(-1.0, 1.0) * handle.width} E{handle.width * line.e_per_mm} # handle layer
        G0 X-{line.width * 0.2} Z{line.height} # move up and shift the layer to make the handle sloping
      {% endfor %}
      M106 S{saved_fan_speed} # restore previous part fan speed
    {% endif %}
    
    G1 E-{line.retract_after} F{50 * 60} # retract ar 50mm/sec after printing
    G0 Y{handle.move_away} F{line.travel_speed * 60}
    M117

    RESTORE_GCODE_STATE NAME=STATE_PRIME_LINE